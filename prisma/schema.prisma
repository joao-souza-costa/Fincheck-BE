// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(uuid()) @db.Uuid
  name                String
  email               String               @unique
  password            String
  verifiedEmail       Boolean              @default(false) @map("verified_email")
  
  bankAccounts        BankAccount[]
  categories          Category[]
  transactions        Transaction[]
  resetPasswordTokens ResetPasswordToken[]

  @@map("users")
}

enum BankAccountEnum {
  CHECKING
  INVESTMENT
  CASH

  @@map("bank_account_enum")
}

model BankAccount {
  id             String          @id @default(uuid()) @db.Uuid
  userId         String          @map("user_id") @db.Uuid
  name           String
  initialBalance Float           @map("initial_balance")
  type           BankAccountEnum
  color          String

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("bank_accounts")
}

model Category {
  id     String          @id @default(uuid()) @db.Uuid
  userId String          @map("user_id") @db.Uuid
  name   String
  icon   String
  type   TransactionEnum

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("categories")
}

enum TransactionEnum {
  INCOME
  EXPENSE

  @@map("transaction_enum")
}

enum PaymentTypeEnum {
  CASH
  CREDIT
  DEBIT
  PIX
  BILLET

  @@map("payment_type_enum")
}

model Transaction {
  id            String          @id @default(uuid()) @db.Uuid
  userId        String          @map("user_id") @db.Uuid
  bankAccountId String          @map("bank_account_id") @db.Uuid
  categoryId    String?         @map("category_id") @db.Uuid
  name          String
  value         Float
  date          DateTime
  type          TransactionEnum
  paymentType   PaymentTypeEnum @default(PIX) @map("payment_type")

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  bankAccount BankAccount @relation(fields: [bankAccountId], references: [id], onDelete: Cascade)
  category    Category?   @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@map("transactions")
}

model ResetPasswordToken {
  id           String   @id @default(uuid()) @db.Uuid
  userId       String   @unique @map("user_id") @db.Uuid
  expired_date DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("reset_password_token")
}
